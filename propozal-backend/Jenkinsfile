pipeline {
  agent any

  environment {
    IMAGE        = 'propozal-backend:latest'
    CONTAINER    = 'propozal-backend'
    APP_PORT     = '8080'
    BACKEND_DIR  = 'propozal-backend'
    ENV_FILE     = '/srv/Propozal/propozal-backend/.env'
  }

  tools {
    gradle 'gradle-8.10.2'
  }

  stages {
    stage('Checkout') {
      steps {
        echo '📦 Checkout from SCM (job branch setting respected)'
        checkout scm
      }
    }

    stage('Build Jar') {
      steps {
        echo '🔧 Gradle build (skip tests)'
        dir("${BACKEND_DIR}") {
          sh "${tool 'gradle-8.10.2'}/bin/gradle clean bootJar -x test"
        }
      }
    }

    stage('Build Docker Image') {
      steps {
        echo "🐳 Docker build: ${IMAGE}"
        sh 'docker build -t $IMAGE $BACKEND_DIR'
      }
    }

    stage('Deploy Container') {
      steps {
        echo '🧹 Stop & remove previous container (if any)'
        sh '''
          docker stop $CONTAINER || true
          docker rm $CONTAINER || true
        '''
        echo '🚀 Run new container'
        sh '''
          docker run -d --name $CONTAINER \
            --restart unless-stopped \
            --env-file $ENV_FILE \
            -p ${APP_PORT}:8080 \
            $IMAGE
        '''
      }
    }

    stage('Smoke Test') {
      steps {
        echo '🩺 Smoke test'
        sh '''
          (curl -fsS http://127.0.0.1:${APP_PORT}/actuator/health || \
           curl -fsS http://127.0.0.1:${APP_PORT}/api/schedule/upcoming) >/dev/null
        '''
      }
    }
  }

  post {
    success { echo '✅ Backend Build & Deployment Success!' }
    failure { echo '❌ Build Failed' }
    always  { sh 'docker image prune -f || true' }
  }
}
