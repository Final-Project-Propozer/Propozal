pipeline {
  agent any

  options {
    timeout(time: 30, unit: 'MINUTES')
    disableConcurrentBuilds()
    durabilityHint('PERFORMANCE_OPTIMIZED')
    timestamps()
  }

  environment {
    FRONTEND_DIR = 'propozal-frontend'
    EC2_HOST     = '3.106.5.69'
    REMOTE_TGZ   = '/tmp/propozal-frontend.tgz'
    REMOTE_ROOT  = '/var/www/propozal'
  }

  stages {
    stage('Checkout') {
      steps {
        echo 'Checkout'
        checkout scm
      }
    }

    stage('Install & Build (via docker run)') {
      steps {
        withCredentials([usernamePassword(credentialsId: 'FRONT_ENV', usernameVariable: 'DUMMY', passwordVariable: 'ENV_FILE')]) {
          sh '''
            set -e
            WORKDIR="$(pwd)"
            echo "$ENV_FILE" > "${FRONTEND_DIR}/.env"

            docker run --rm \
              -v "$WORKDIR":/ws \
              -w /ws/${FRONTEND_DIR} \
              node:20-bullseye \
              bash -lc "
                npm ci &&
                npm run build &&
                tar -C dist -czf build.tgz .
              "
          '''
        }
      }
    }

    stage('Deploy to EC2') {
      steps {
        withCredentials([sshUserPrivateKey(credentialsId: 'EC2_SSH_KEY', keyFileVariable: 'SSH_KEY', usernameVariable: 'SSH_USER')]) {
          sh '''
            set -e
            chmod 600 "$SSH_KEY"
            scp -o StrictHostKeyChecking=no -i "$SSH_KEY" ${FRONTEND_DIR}/build.tgz ${SSH_USER}@${EC2_HOST}:${REMOTE_TGZ}
            ssh -o StrictHostKeyChecking=no -i "$SSH_KEY" ${SSH_USER}@${EC2_HOST} "
              sudo mkdir -p ${REMOTE_ROOT} &&
              sudo rm -rf ${REMOTE_ROOT}/* &&
              sudo tar -xzf ${REMOTE_TGZ} -C ${REMOTE_ROOT} &&
              sudo nginx -t &&
              sudo systemctl reload nginx
            "
          '''
        }
      }
    }

    stage('Smoke Test') {
      options { timeout(time: 2, unit: 'MINUTES') }
      steps {
        sh '''
          set -e
          curl -fsS https://propozal.app >/dev/null
        '''
      }
    }
  }

  post {
    success { echo '✅ Frontend deployed to Nginx' }
    failure { echo '❌ Frontend pipeline failed' }
    always  { echo 'Pipeline finished' }
  }
}