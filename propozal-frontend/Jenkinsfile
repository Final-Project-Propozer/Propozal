pipeline {
  agent any

  options {
    timeout(time: 30, unit: 'MINUTES')
    disableConcurrentBuilds()
    durabilityHint('PERFORMANCE_OPTIMIZED')
    timestamps()
  }

  environment {
    FRONTEND_DIR = 'propozal-frontend'
    EC2_IP       = '<EC2_IP>'
    REMOTE_TGZ   = '/tmp/propozal-frontend.tgz'
    REMOTE_ROOT  = '/var/www/propozal'
  }

  tools { nodejs 'node-20' }

  stages {
    stage('Checkout') {
      steps {
        echo 'Checkout'
        checkout scm
      }
    }

    stage('Install & Build') {
      steps {
        dir("${FRONTEND_DIR}") {
          withCredentials([usernamePassword(credentialsId: 'FRONT_ENV', usernameVariable: 'DUMMY', passwordVariable: 'ENV_FILE')]) {
            sh '''
              set -e
              echo "$ENV_FILE" > .env
              npm ci
              npm run build
            '''
          }
        }
      }
    }

    stage('Package') {
      steps {
        dir("${FRONTEND_DIR}") {
          sh '''
            set -e
            tar -C dist -czf build.tgz .
          '''
        }
      }
    }

    stage('Deploy to EC2') {
      steps {
        sshagent(credentials: ['EC2_SSH_KEY']) {
          sh '''
            set -e
            scp -o StrictHostKeyChecking=no ${FRONTEND_DIR}/build.tgz ubuntu@${EC2_IP}:${REMOTE_TGZ}
            ssh -o StrictHostKeyChecking=no ubuntu@${EC2_IP} "
              sudo mkdir -p ${REMOTE_ROOT} &&
              sudo rm -rf ${REMOTE_ROOT}/* &&
              sudo tar -xzf ${REMOTE_TGZ} -C ${REMOTE_ROOT} &&
              sudo nginx -t &&
              sudo systemctl reload nginx
            "
          '''
        }
      }
    }

    stage('Smoke Test') {
      options { timeout(time: 2, unit: 'MINUTES') }
      steps {
        sh '''
          set -e
          curl -fsS https://propozal.app >/dev/null
        '''
      }
    }
  }

  post {
    success { echo '✅ Frontend deployed to Nginx' }
    failure { echo '❌ Frontend pipeline failed' }
    always  { echo 'Pipeline finished' }
  }
}